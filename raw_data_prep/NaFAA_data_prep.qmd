---
title: "Fisheries Stock Assessment Using NaFAA Data"
author: "Dustin Duncan"
format: 
  html:
    code-fold: true
    toc: true
    number-sections: true
    embed-resources: true
editor: visual
execute:
  echo: true
  message: false
  warning: false
---

```{r}
library(tidyverse)
# install.packages("nloptr")
library(nloptr)
library(knitr)
# devtools::install_github("cfree14/datalimited2")
library(datalimited2) # Package containing functions for use in Data-limited fisheries stock assessment 
# ?cmsy2 # Could be useful to use 
# ?bsm # Likely wouldn't work because we need a time series of biomasss data as well 
# ?zbrt # Could also be useful to use 
# ?ocom # Could be useful but would need a natural mortality (1/yr are the units)
# ?rorcs # Would be difficult to use because of the required attributes 
# ?ms_cmsy # Beta version. But would be useful for a multispecies approach 
```

## Industrial Fleet Dataprep

Note: For now, we will only be focusing on the Sardinella *aurita* species, although we have created a vector of the species that are present in both DWF and SSF data in case we apply the model to additional species 

```{r reading in DWF data}
dwf_ts <- readxl::read_xlsx("../data_raw/data_NaFAA/Time_series_Production_data.xlsx", sheet = "Industrial prod 2018-2023", skip = 3, n_max = 76, col_types = c("text", "numeric","numeric","numeric","numeric","numeric","numeric","numeric")) %>% 
  rename(Species = ...1)
view(dwf_ts)
```

```{r cleaning DWF data}
# Tidying the dwf_ts dataframe 
dwf_aurita <- dwf_ts %>% 
  filter(Species %in% c("Sardinella aurita")) %>% # Filtering relevant species 
  select(-c(`Grand Total`)) %>% # Removing "Grand Total" column to obtain time series
  pivot_longer(cols = -Species, names_to = "Year", values_to = "Catch") %>%  
  # Pivoting to tidy format
  mutate(Year=as.numeric(Year))

# Isolating the grand total of S. aurita catch from the 'dwf_ts' dataframe
grand_total <- dwf_ts[dwf_ts$Species == "Sardinella aurita", c(1,8)]

# Check to ensure that the values present in the time series dataframe match the grand total in the dwf_ts dataframe 
sum(dwf_aurita$Catch) == grand_total$`Grand Total`
```

### Using Chris Free's 'datalimited2' package to conduct preliminary DWF stock assessment 

```{r DWF Data Limited Stock assessment, fig.height=6}
# ?cmsy2 # Could be useful to use. Takes time series of years (year), time series of catch (catch) and ideally the species intrinsic growth rate, r (r.low, r.hi)

## According to Thorson, Predicting recruitment density dependence... https://onlinelibrary.wiley.com/doi/full/10.1111/faf.12427?_gl=1*1pfgsds*_gcl_au*MTQzNTIzNDc2OC4xNzI3ODk0NDI0LjIxODYyMDgyMy4xNzI4NDI3MDk5LjE3Mjg0MjcwOTk. , the Clupeiformes exhibit a mean intrinsic growth rate of 0.61 with a standard devation of 0.96, 

## The mean prediction for r for S. aurita here was 0.6241839, so I am going to test the cmsy2 method of stock assessment with both a uniform sd and narrowed sd. 

# With standard deviation of r = 0.05
auritus_dwf_traits <- cmsy2(year=dwf_aurita$Year, catch=dwf_aurita$Catch, r.low=0.47, r.hi=0.77)

plot_dlm(auritus_dwf_traits)
options(scipen=999)
ref_pts <- auritus_dwf_traits[["ref_pts"]]
ref_ts <- auritus_dwf_traits[["ref_ts"]]

viable_k_values <- auritus_dwf_traits[["k_viable"]]
mean_k <- mean(viable_k_values)*1000

# Now lets try to find S. aurita's intrinsic growth rate 
# remotes::install_github("James-Thorson-NOAA/FishLife")
library(FishLife)
Taxa = Search_species(Genus = "Sardinella",
                      Species = "aurita")$match_taxonomy
Predict = Plot_taxa( Taxa[1],
                     mfrow=c(2,3)) # This creates an object that hosts both "Cov_pred" matrix (estimated covariance between paramters) as well as "Mean_pred" matrix (matrix of empirical Bayes predictions of traits for each taxonomic group. 
# ?Plot_taxa

mean_pred <- as.data.frame(Predict[[1]]["Mean_pred"])

# KEY FOR MEAN_PRED
# K = Relative Growth Rate  
# M = Mortality Rate
# Winfinity(W_inf) = Asymptotic mass 
# Loo (L_inf) = Asymptotic Length 
# tmax (A_max) = Maximum age
# tm (A_mat) = Age at maturity
# Lm (L_mat) = Length at maturity
# Temperature = Average temperature
# ln_margsd (Sigma_R) = SD of recruitment
# rho = Recruitment Autocorrelation
# logitbound_h (h) = Steepness or Recruitment Productivity
# ln_r (r) = Intrinsic growth rate 

# ?zbrt # Could also be useful to use 
# ?ocom # Could be useful but would need a natural mortality (1/yr are the units)
```



## Artisanal Fleet Dataprep

```{r reading in SSF data}
ssf_ts <- readxl::read_xlsx("../data_raw/data_NaFAA/Time_series_Production_data.xlsx", sheet = "Artisanal prod 2018-2023", skip = 3, n_max = 106, col_types = c("text", "numeric","numeric","numeric","numeric","numeric","numeric","numeric")) %>% 
  rename(Species = ...1)
view(ssf_ts)
```

```{r cleaning SSF data}
# Tidying the dwf_ts dataframe 
ssf_aurita <- ssf_ts %>% 
  filter(Species %in% c("Sardinella aurita")) %>% # Filtering relevant species 
  select(-c(`Grand Total`)) %>% # Removing "Grand Total" column to obtain time series
  pivot_longer(cols = -Species, names_to = "Year", values_to = "Catch") %>%  
  # Pivoting to tidy format
  mutate(Year=as.numeric(Year))

# Isolating the grand total of S. aurita catch from the 'dwf_ts' dataframe
grand_total <- ssf_ts[ssf_ts$Species == "Sardinella aurita", c(1,8)]

# Check to ensure that the values present in the time series dataframe match the grand total in the dwf_ts dataframe 
sum(ssf_aurita$Catch) == grand_total$`Grand Total`

```


```{r SSF Data Limited Stock assessment}
# ?cmsy2 # Could be useful to use 
# ?zbrt # Could also be useful to use 
# ?ocom # Could be useful but would need a natural mortality (1/yr are the units)

ssf_aurita_traits <- cmsy2(year = ssf_aurita$Year, catch = ssf_aurita$Catch, r.low = 0.47, r.hi=0.77)

plot_dlm(ssf_aurita_traits)
```


```{r Parameter storing }
options(scipen=999)
ssf_ref_pts <- ssf_aurita_traits[["ref_pts"]]
ssf_ref_ts <- ssf_aurita_traits[["ref_ts"]]
ssf_viable_k_values <- ssf_aurita_traits[["k_viable"]]
ssf_mean_k <- mean(ssf_viable_k_values)*1000
```

## Identifying Species Harvested by both DWF and SSF 

```{r}
spp_in_both_dwf <- dwf_ts %>% 
  select(Species, paste0("20", seq(from=18,to=23))) %>% 
  filter(Species %in% ssf_ts$Species) %>% 
  na.omit()
spp_in_both_ssf <- ssf_ts %>% 
  select(Species, paste0("20", seq(from=18,to=23))) %>% 
  filter(Species %in% dwf_ts$Species) %>% 
  na.omit()

overall_spp_in_both <- spp_in_both_ssf %>% 
  filter(Species %in% spp_in_both_dwf$Species)

spp_vector <- overall_spp_in_both$Species[1:12]

ssf_test <- ssf_ts %>% 
  filter(Species %in% spp_vector)

dwf_test <- dwf_ts %>% 
  filter(Species %in% spp_vector)

print(spp_vector)
resilience_table <- resilience(species=spp_vector[1:12])
resilience_table[11,1] = c("Dasyatis margarita")
resilience_table[11,2] = c("Not Documented")

spp_vector

resilience_table$common = c("Cusk-eel", "bumper", "flatfish", "ray-finned fish", "grunt", "ray-finned fish", "ray-finned fish", "mackerel", "barracuda", "cutlass fish", "ray")

resilience_table$researcher = c("Dustin","Dustin","Abigail","Mara","Taylor","Taylor","NA","Maddy","Maddy","Abigail", "Mara")

knitr::kable(resilience_table[ ,1:4])
```

### Combined catch estimate of parameters  

```{r}
total_aurita <- tibble(Species = dwf_aurita$Species, Catch=(dwf_aurita$Catch + ssf_aurita$Catch), Year=dwf_aurita$Year)

total_aurita_traits <- cmsy2(year=total_aurita$Year, catch=total_aurita$Catch, r.low=0.47, r.hi=0.77)

plot_dlm(total_aurita_traits)
datalimited2::resilience(species=c("Sardinella aurita"))
```


```{r}
options(scipen=999)
total_ref_pts <- total_aurita_traits[["ref_pts"]]
total_ref_ts <- total_aurita_traits[["ref_ts"]]
total_viable_k_values <- total_aurita_traits[["k_viable"]]
total_mean_k <- mean(total_viable_k_values)*1000
total_mean_k # 11,916,913
```

### Biological Model Formula

$$
B_{t+1} = B_t + (\frac{\Omega + 1}{\Omega} ) g \beta + 1-(\frac{B_t}{K})^{\Omega} - gf_tb_t
$$ 

### Profit function from biological model estimates 

- $\Pi$ = marginal profit 

$$
\Pi_{t} = pH_t - cF_t^{\beta}
$$
## Ideal* profit scenario

- $\Pi_{MSY}$ = ideal marginal profit under sustainable exploitation 

$$
\Pi_{MSY} = p_{MSY}f_t b_t - c(f_t g )^{\beta}
$$
$$ 
\text{Biological Model:} \\
\mathrm{B_{t+1}^{DWF}= B_{t}^{DWF}+ \frac{\Phi+1}{\Phi}gB_{t}^{DWF}(1-\frac{B_{t}^{DWF}}{K})^\Phi-H_{t}^{DWF}} \\ ~ \\
\mathrm{B_{t+1}^{SSF}= B_{t}^{SSF}+ \frac{\Phi+1}{\Phi}gB_{t}^{SSF}(1-\frac{B_{t}^{SSF}}{K})^\Phi-H_{t}^{SSF}} \\
\text{Profit Function:} \\
\mathrm{\Pi_{t}^{DWF}=(1-\alpha)pH_{t}^{DWF}-\frac{cH_{t}^{DWF}}{X_t} }
$$




