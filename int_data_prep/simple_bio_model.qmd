---
title: "SPM_bio_model"
author: "Dustin Duncan"
format: html
editor: visual
---

```{r}
# rm(list=ls())
library(tidyverse)
library(devtools)
# install_github("https://github.com/haddonm/MQMF")
# devtools::install_github("https://github.com/haddonm/MQMF")
library(MQMF)
library(datalimited2)
library(nloptr)
# install.packages("calibrar")
library(calibrar)
library(sensitivity)
library(purrr)
# install.packages("furrr")
library(furrr)
# install.packages("scales")
library(scales)
```

### Packages Used

Oliveros–Ramos R, Shin Y (2016). “calibrar: an R package for the calibration of complex ecological models.” Submitted. R package version 0.3, https://arxiv.org/abs/1603.03141.

```{r}
cpue = read.csv(here::here("data_int/data_FAO/cpue_timeseries_1990_2017.csv"))
effort = read.csv(here::here("data_int/data_FAO/effort_timeseries_1990_2017.csv"))
catch = read.csv(here::here("data_int/data_FAO/catch_timeseries_1990_2017.csv"))
catch_nafaa = read.csv(here::here("data_int/data_NaFAA/catch_timeseries_2018_2023.csv"))
all_metrics = read.csv(here::here("data_int/data_FAO/all_metrics_timeseries_1997_2017.csv"))
```

## Quick Plots

```{r}

dwf = all_metrics %>% 
  filter(Fleet %in% "Industrial") %>% 
  select(Effort, Year)
ggplot(all_metrics, aes(x = Year, y=CPUE, color=Fleet)) + 
  geom_line()
ggplot(dwf, aes(x = Year, y=Effort)) + 
  geom_line()
ggplot(all_metrics, aes(x = Year, y=Catch_tonnes, color=Fleet)) + 
  geom_line()

```

## Using datalimited2 package to estimate range of q values

```{r}
spmdata = all_metrics %>% 
  group_by(Year) %>% 
  janitor::clean_names() %>%
  summarize(catch = sum(catch_tonnes, na.rm = TRUE),
            effort = sum(effort, na.rm=TRUE)) %>%
  mutate(cpue = catch/effort) %>%
  mutate(year = as.numeric(year),
         catch = as.numeric(catch),
         effort = as.numeric(effort)) %>% 
  filter(!effort == 0) %>% 
  filter(year > 2007) %>% 
  ungroup() %>% 
  as.data.frame()

spmdat2 = catch_nafaa %>%
  group_by(Year) %>% 
  summarize(Catch_tonnes = sum(Catch_tonnes)) %>%
  rename(year = Year, 
         catch = Catch_tonnes) %>% 
  mutate(effort=NA, cpue=NA)

spmdata = spmdata %>% 
  rbind(spmdat2)

spmdat3 = read.csv(here::here("data_int/data_lit/effort_Rousseau_bound_FAO_metrics.csv")) %>% 
  select(c(Fleet, Year, Catch_tonnes, Effortday, CPUE_day)) %>%
    janitor::clean_names() %>% 
    group_by(year) %>% 
    summarize(catch = sum(catch_tonnes, na.rm=TRUE),
            effort = sum(effortday, na.rm=TRUE),
            cpue = sum(cpue_day, na.rm=TRUE)) %>% 
    rbind(spmdat2)


## Values for K and initial biomass came from this estimate. As we can see compared to the above estimate, the catch data can be very influential on this model output
bsm_out2 = datalimited2::bsm(year=spmdat3$year, 
                            catch=spmdat3$catch, 
                            biomass=spmdat3$cpue, 
                            btype="CPUE", 
                            r.low=0.35, r.hi=0.55
                            # ,stb.low=0.4, stb.hi=0.7
                            )

plot_dlm(bsm_out2)
ref_pts = bsm_out2[["ref_pts"]]
ref_ts = bsm_out2[["ref_ts"]]
?datalimited2::bsm
```

$$
\begin{align}
&\text{Biological Parameters} \\ 
\gamma &= \text{Annual production of juveniles as proportion } \\
&~~~~~~\text{of adult stock biomass } \\ 
\mu &= \text{Zone natural mortality rate } \mathrm{(year^{-1})} \\ 
v &= \text{Proportion of juvenile biomass that} \\
&~~~~~~\text{recruits each year } \mathrm{(year^{-1})} \\ 
\chi &= \text{Proportion of recruited biomass} \\ 
& ~~~~~\text{entering Zones 1 or 2} \\ ~ \\
&\text{Economic Parameters} \\
q_{f} &= \text{Catchability coefficient for fleet f}  \\ 
\phi &= \text{Rate of reinvesting in fisheries } \\
p &= \text{Fish price } \mathrm{(USD~ton^{-1})} \\
c_{z} &= \text{Cost for SSF effort in zone z} \\
c &= \text{Cost for DWF effort} \\ 
\alpha &= \text{Fee (percent of landed value)} \\ ~ \\
\beta &= \text{Weighting parameter (emphasis on SSF)}
\end{align}
$$

$$ 
\begin{align}
\frac{dB_{1}}{d \tau} &= -\mu B_{1}-q_{A}B_{1}e_{1}-q_{I}B_{1}E+ vB_{j}(1-{\chi}) \\

\frac{dB_{2}}{d \tau} &=  -\mu B_{2}-q_{A}B_{2}e_{2}+ vB_{j}{\chi} \\

\frac{dB_{3}}{d \tau} &= \gamma(B_{1}+B_{2})-q_{A}B_{3}e_{3}-vB_{3}-\mu B_{3} \\ 
 
\frac{de_{1}}{d \tau} &= e_{1} + \phi[-(c_{1}e_{1})^{2}+pq_{A}B_{1}e_{1}] \\

\frac{de_{2}}{d \tau} &= e_{2} + \phi[-(c_{2}e_{2})^{2}+pq_{A}B_{2}e_{2}] \\
 
\frac{de_{3}}{d \tau} &= e_{3} +  \phi[-(c_{3}e_{3})^{2}+pq_{A}B_{3}e_{3}] \\
 
\frac{dE}{d \tau} &= E + \phi[ -(cE)^{2}+(1-\alpha)pq_{I}B_{1}E] \\

\mathrm{C_{SSF, z,t}} &= q_{SSF}B_{z,t}e_{z,t} \\ 

\mathrm{C_{DWF, t}} &= q_{DWF}B_{1,t}E_{t} \\

\Pi_{SSF,t} &= \sum_{z=1}^{z=3} pC_{SSF,z,t } - c_{z} e_{z,t} \\

\mathrm{ NPV} &= \sum_{t=1}^{t=T} \rho^{t}[\mathrm{\beta\Pi_{SSF,t}+(1-\beta) \alpha p C_{DWF}] }

\end{align} 
$$

## First go 

```{r}
# Estimates from FAO: r = 0.45/year, K = 100 000 tonnes, and BI/K = 60 percent, D=40%
catch_nafaa = read.csv(here::here("data_int/data_NaFAA/catch_timeseries_2018_2023.csv")) %>% 
  group_by(Year) %>% 
  summarize(Catch_tonnes = sum(Catch_tonnes)) %>% 
  filter(Year > 2018) %>%
  rename(year = Year,
         catch = Catch_tonnes) %>% 
  mutate(year = seq(from=1, to= 5, by =1))

## Im going to change the effort functions to be additive, because the new effort is insanely high, then change the fleet dynamics parameter to reflect the rate of entry into the fishery (i.e the effort response is not as large or as immediate)

source("../utils/interaction2.R")
source("../utils/constraint.R")
source("../utils/loglikelihood.R")
source("../utils/plot_fx.R")


state = c(B1i = 10000, B2i = 10000, B3i = 6000,
          e1i = 10000, e2i = 12000, e3i = 2000, Ei = 10000,
          K = 50000)

newstate = c(B1i = 3638.688, B2i = 9807.942, B3i = 5158.846,
          e1i = 9784.621, e2i = 4307.414, e3i = 1520.177, Ei = 3981.774)

upper = c(B1i = 15000, B2i = 15000, B3i = 10000,
          e1i = 25761.151, e2i = 25378.981, e3i = 15071.943, Ei = 26076.548,
          K=60000)

parameters = c(
  # Biological parameters
  mu=0.43, chi=0.5, 
  gamma=1, v=1,
  # Economic Parameters
  qD=0.00000294, qS=0.00000147,
  C1=0.060, C2=0.045, C3=0.040, C=0.045,
  beta=0.5, phi=0.005, p=500, discount=0.05)

time = 10

choice=0.1

tester = interaction_LL(choice=0.1, state=log(state),time=time, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)

npv=-interaction_LL(choice=0.1, state=log(state),time=time, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)

ddplot(tester, bmsy=TRUE)
######################## First test! These are preliminary results for when the fee is 10% of landed value over 10 years, when NaFAA places equal weight on the SSF profit and their revenue from DWF. 
```

## Initial State calibration against NaFAA data

```{r}
negativeLL(pars=log(state), 
      funk=interaction_LL, 
      logobs=log(catch_nafaa[, "catch"]$catch), 
      choice = 0.1,
      indat=catch_nafaa, 
      params=log(parameters),
      time=5)

# This optimization is not working for some reason. Im not sure why 

state = c(B1i = 12000, B2i = 12000, B3i = 6000,
          e1i = 15000, e2i = 15000, e3i = 7000, Ei = 9000, K=35000)

lower = c(B1i = 3639, B2i = 9808, B3i = 5159,
          e1i = 9785, e2i = 4307, e3i = 1520, Ei = 3982, K=30000)

upper = c(B1i = 15000, B2i = 15000, B3i = 10000,
          e1i = 25761.151, e2i = 25378.981, e3i = 15071.943, Ei = 26076.548,
          60000)

scalepar=magnitude(state)

best2 <- optim2(par = log(state),
               fn = negativeLL,
               funk=interaction_LL,
               logobs=log(catch_nafaa[, "catch"]$catch),
               choice=0.1,
               indat=catch_nafaa,
               params=log(parameters), time=5,
               rtn_catch = TRUE, rtn_npv=FALSE,
               method="L-BFGS-B",
               lower = log(lower),
               upper = log(upper),
               control=list(maxit=1000,parscale=scalepar))

options(scipen=999)
exp(best2$par)
best2$value
best2$counts
best2$convergence
best2$message

## Testing it with the new spawning function
# 
# bestspawn <- optim2(par = log(exp(best2$par)),
#                fn = negativeLL,
#                funk=interaction_LL,
#                logobs=log(catch_nafaa[, "catch"]$catch),
#                choice=0.1,
#                indat=catch_nafaa,
#                params=log(parameters), time=5,
#                rtn_catch = TRUE, rtn_npv=FALSE,
#                method="L-BFGS-B",
#                active = c(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE),
#                lower = log(newstate),
#                upper = log(c(B1i = 15000, B2i = 15000, B3i = 10000,
#           e1i = 25761.151, e2i = 25378.981, e3i = 15071.943, Ei = 26076.548)),
#                hessian=TRUE,
#                control=list(maxit=1000,parscale=scalepar))
# 
# options(scipen=999)
# exp(bestspawn$par)
# bestspawn$value
# bestspawn$counts
# bestspawn$convergence
# bestspawn$message
# 
# spawntesttab = interaction_LL(choice=0.1, state=log(exp(bestspawn$par)),time=5, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)
# 
# spawntestnpv = -interaction_LL(choice=0.1, state=log(exp(best2$par)),time=5, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)

```

## Five Year Time Horizon

```{r}
# Back of the napkin math used to estimate the starting catchability for each fleet. Used the all_metrics dataframe to divide catch by 22020*effort for 2017 (artisanal) and 2007 (industrial)
# best2par = c(B1i=15000, B2i=15000, B3i=7133, e1i=12186, e2i=16437, e3i=2193, Ei=3982,K=53855)
# best2par = c(B1i=14120, B2i=11827, B3i=6009, e1i=20630, e2i=25241, e3i=7016, Ei=5023, K=37600) 
# best2par=c(B1i=15000, B2i=11524, B3i=6009, e1i=19884, e2i=23843, e3i=7014, Ei=5024, K=37600)
# best2par=c(B1i=13755, B2i=11621, B3i=6724, e1i=23920, e2i=24550, e3i=8225, Ei=6838, K=37600)
# best2par=c(B1i=13259, B2i=11205, B3i=6684, e1i=23950, e2i=25354, e3i=8289, Ei=13605, K=53855)
# best2par=c(B1i=15000, B2i=12828, B3i=6343, e1i=17393, e2i=18150, e3i=7352, Ei=12516, K=53855)
# best2par=c(B1i=15000, B2i=12819, B3i=6357, e1i=15971, e2i=16957, e3i=7305, Ei=10000, K=53855) 
# best2par = best2$par
# best2par['K'] = log(53855)
# best2par = exp(best2par)
# best3par=best2par
## Five year projection under business as usual

fiveyrbautab = interaction_LL(choice=0.1, state=log(best2par),time=5, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE, ban=FALSE)

fiveyrbaunpv = -interaction_LL(choice=0.1, state=log(best2par),time=5, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE, ban=FALSE)

fiveyr50tab = interaction_LL(choice=0.50, state=log(best2par),time=5, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)
fiveyr50npv = -interaction_LL(choice=0.50, state=log(best2par),time=5, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)
sum(fiveyr50tab$pvPIS)

## Five year projection under optimized fee structure 

local_opts<-list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-15)
options=list("algorithm"="NLOPT_LN_AUGLAG",xtol_rel=1e-15,maxeval=160000,"local_opts"=local_opts)

fiveyropt=nloptr(x0 = 0.1,
                    eval_f = interaction_LL,
                    opts = options,
                    lb = 0,
                    ub = 1,
                    eval_g_ineq=constraint_fx,
                    state=log(best2par),
                    time=5, 
                    params=log(parameters),
                    rtn_catch=FALSE,
                    rtn_npv=TRUE,
                    ban=FALSE,
                    indat=NULL
                    )

fiveyropt$solution
-fiveyropt$objective

fiveyropttab = interaction_LL(choice=fiveyropt$solution, state=log(best2par), time=5, params=log(parameters), rtn_catch=FALSE, rtn_npv=FALSE)

fiveyroptnpv = -interaction_LL(choice=fiveyropt$solution, state=log(best2par), time=5, params=log(parameters), rtn_catch=FALSE, rtn_npv=TRUE)

## Five year projection with a ban

fiveyrbantab = interaction_LL(choice=0.1, state=log(best2par), time=5, params=log(parameters), rtn_catch=FALSE, rtn_npv=FALSE, ban=TRUE)

fiveyrbannpv = -interaction_LL(choice=0.1, state=log(best2par), time=5, params=log(parameters), rtn_catch=FALSE, rtn_npv=TRUE, ban=TRUE)

ddplot(fiveyrbautab, bmsy=TRUE)
ddplot(fiveyropttab, bmsy=TRUE)
ddplot(fiveyrbantab, bmsy=TRUE)
```

When running the model under initial parameter values and calibrated initial state values, over a 5-year time period with NaFAA placing equal weight on the profit of small scale fishers and the revenue from DWF, the optimal solution found was to raise the price of the access fee to 100%, leading to a net present value over a 5-year time period of \$616,737 USD, in 2023 dollar value. This solution would cause a decline in effort from DWF due to net losses, and eventually lead them to leave the fishery due to net capital loss. Compared to the business as usual case, this would increase the net present value of fisheries revenues by \$198,707. While the optimal solution represents an effective ban of DWF from Liberia’s EEZ, if NaFAA were to immediately ban and restrict access by DWF, the net present value of fisheries revenues would decrease by \$12,558 compared to the business as usual case.

### Writing five year plots out to plots folder 

```{r}
## BAU 
dfB = fiveyrbautab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
  mutate(Bzone = case_when(
    Bzone == "B1" ~ "1",
    Bzone == "B2" ~ "2",
    Bzone == "B3" ~ "3"
  ),
  Bzone = as.factor(Bzone))

plotB <- ggplot(dfB) +
    geom_line(aes(x = time, y = Biomass, color=Bzone)) + 
    labs(x = "Time (years)", y = "Biomass (tonnes)", color = "Zone")+
  ggtitle("Business as Usual Biomass in Zone Z over Time") +   scale_y_continuous(limits=c(0, max(fiveyrbautab$B1)), breaks = seq(from=0, to=max(fiveyrbautab$B1), by=2000)) +
    theme_bw()
  
dfBmsy = fiveyrbautab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
    group_by(time) %>% 
    summarize(Btot = sum(Biomass, na.rm=TRUE)) %>% 
    mutate(Bbmsy = Btot/26992) # Biomass over Biomass at MSY (originally 16459.968)

bmsystart = round(dfBmsy[1,3]$Bbmsy, 2)
bmsyend = round(dfBmsy[length(dfBmsy$time),3]$Bbmsy, 2)
  
plotBmsy <- ggplot(dfBmsy) +
    geom_line(aes(x = time, y = Bbmsy)) + 
    geom_abline(aes(intercept=1, slope = 0), linetype="dashed", color="red") + 
    labs(x = "Time (years)", y = "B/BMSY") +
  ggtitle("Business as Usual B/BMSY over Time") +
  geom_text(aes(x = 1, y =1.5, label=bmsystart)) +
  geom_text(aes(x = 5, y =0.75, label=bmsyend)) + 
    scale_y_continuous(limits=c(0,5)) + 
    theme_bw()
  
dfE = fiveyrbautab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "Zone 1 SSF",
    Ezone == "e2" ~ "Zone 2 SSF",
    Ezone == "e3" ~ "Zone 3 SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) 

plotE <- ggplot(dfE) +
    geom_line(aes(x = time, y = Effort, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Business as Usual Effort in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(dfE$Effort)), breaks = seq(from=0, to=max(dfE$Effort), by=2000)) +
    theme_bw()

dfE2 = fiveyrbautab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "SSF",
    Ezone == "e2" ~ "SSF",
    Ezone == "e3" ~ "SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) %>% 
  group_by(time, Ezone) %>% 
  summarize(ezone = sum(Effort))

plotE2 <- ggplot(dfE2) +
    geom_line(aes(x = time, y = ezone, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Business as Usual Effort over Time") +
    theme_bw()
  
dfH = fiveyrbautab %>% 
    select(-c(B1, B2, B3, e1, e2, e3, E, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Fleet", values_to="Harvest")

plotH <- ggplot(dfH) +
    geom_line(aes(x = time, y = Harvest, color=Fleet)) + 
    labs(x = "Time", y = "Harvest", color = "Fleet")+ 
  ggtitle("Business as Usual Harvest over Time") +
    theme_bw()

plotP <- ggplot(fiveyrbautab) + 
    geom_line(aes(x = time, y = PV)) + 
    labs(x = "Time", y = "Present Value of Benefits") + 
  scale_y_continuous(limits=c(0, max(fiveyrbautab$PV)), breaks = seq(from=0, to=max(fiveyrbautab$PV), by=25000)) +
  ggtitle("Business as Usual Present Value of Benefits over Time") +
    theme_bw()
# ggsave(here::here("plots/plotB_5yr_bau.png"), plotB)
# ggsave(here::here("plots/plotBmsy_5yr_bau.png"), plotBmsy)
# ggsave(here::here("plots/plotE_5yr_bau.png"), plotE)
# ggsave(here::here("plots/plotH_5yr_bau.png"), plotH)
# ggsave(here::here("plots/plotP_5yr_bau.png"), plotP)
```


```{r}
## OPT 
dfB = fiveyropttab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
  mutate(Bzone = case_when(
    Bzone == "B1" ~ "1",
    Bzone == "B2" ~ "2",
    Bzone == "B3" ~ "3"
  ),
  Bzone = as.factor(Bzone))

plotB <- ggplot(dfB) +
    geom_line(aes(x = time, y = Biomass, color=Bzone)) + 
    labs(x = "Time (years)", y = "Biomass (tonnes)", color = "Zone")+
  ggtitle("Optimal Solution Biomass in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(fiveyropttab$B1)), breaks = seq(from=0, to=max(fiveyropttab$B1), by=2000)) +
    theme_bw()
  
dfBmsy = fiveyropttab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
    group_by(time) %>% 
    summarize(Btot = sum(Biomass, na.rm=TRUE)) %>% 
    mutate(Bbmsy = Btot/26992) # Biomass over Biomass at MSY (originally 16459.968)

bmsystart = round(dfBmsy[1,3]$Bbmsy, 2)
bmsyend = round(dfBmsy[length(dfBmsy$time),3]$Bbmsy, 2)
  
plotBmsy <- ggplot(dfBmsy) +
    geom_line(aes(x = time, y = Bbmsy)) + 
    geom_abline(aes(intercept=1, slope = 0), linetype="dashed", color="red") + 
    labs(x = "Time (years)", y = "B/BMSY") +
  ggtitle("Optimal Solution B/BMSY over Time") +
  geom_text(aes(x = 1, y =1.5, label=bmsystart)) +
  geom_text(aes(x = 5, y =0.75, label=bmsyend)) + 
    scale_y_continuous(limits=c(0,5)) + 
    theme_bw()
  
dfE = fiveyropttab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "Zone 1 SSF",
    Ezone == "e2" ~ "Zone 2 SSF",
    Ezone == "e3" ~ "Zone 3 SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) 

plotE <- ggplot(dfE) +
    geom_line(aes(x = time, y = Effort, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Optimal Solution Effort in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(dfE$Effort)), breaks = seq(from=0, to=max(dfE$Effort), by=2000)) +
    theme_bw()

dfE2 = fiveyropttab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "SSF",
    Ezone == "e2" ~ "SSF",
    Ezone == "e3" ~ "SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) %>% 
  group_by(time, Ezone) %>% 
  summarize(ezone = sum(Effort))

plotE2 <- ggplot(dfE2) +
    geom_line(aes(x = time, y = ezone, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Optimal Solution Effort over Time") +
    theme_bw()
  
dfH = fiveyropttab %>% 
    select(-c(B1, B2, B3, e1, e2, e3, E, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Fleet", values_to="Harvest")

plotH <- ggplot(dfH) +
    geom_line(aes(x = time, y = Harvest, color=Fleet)) + 
    labs(x = "Time", y = "Harvest", color = "Fleet")+ 
  ggtitle("Optimal Solution Harvest over Time") +
    theme_bw()

plotP <- ggplot(fiveyropttab) + 
    geom_line(aes(x = time, y = PV)) + 
    labs(x = "Time", y = "Present Value of Benefits") + 
  scale_y_continuous(limits=c(0, max(fiveyropttab$PV)), breaks = seq(from=0, to=max(fiveyropttab$PV), by=25000)) +
  ggtitle("Optimal Solution Present Value of Benefits over Time") +
    theme_bw()
# ggsave(here::here("plots/plotB_5yr_opt.png"), plotB)
# ggsave(here::here("plots/plotBmsy_5yr_opt.png"), plotBmsy)
# ggsave(here::here("plots/plotE_5yr_opt.png"), plotE)
# ggsave(here::here("plots/plotH_5yr_opt.png"), plotH)
# ggsave(here::here("plots/plotP_5yr_opt.png"), plotP)
```


```{r}
## BAN 
dfB = fiveyrbantab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
  mutate(Bzone = case_when(
    Bzone == "B1" ~ "1",
    Bzone == "B2" ~ "2",
    Bzone == "B3" ~ "3"
  ),
  Bzone = as.factor(Bzone))

plotB <- ggplot(dfB) +
    geom_line(aes(x = time, y = Biomass, color=Bzone)) + 
    labs(x = "Time (years)", y = "Biomass (tonnes)", color = "Zone")+
  ggtitle("Ban Scenario Biomass in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(fiveyrbantab$B1)), breaks = seq(from=0, to=max(fiveyrbantab$B1), by=2000)) +
    theme_bw()
  
dfBmsy = fiveyrbantab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
    group_by(time) %>% 
    summarize(Btot = sum(Biomass, na.rm=TRUE)) %>% 
    mutate(Bbmsy = Btot/26992) # Biomass over Biomass at MSY (originally 16459.968)

bmsystart = round(dfBmsy[1,3]$Bbmsy, 2)
bmsyend = round(dfBmsy[length(dfBmsy$time),3]$Bbmsy, 2)
  
plotBmsy <- ggplot(dfBmsy) +
    geom_line(aes(x = time, y = Bbmsy)) + 
    geom_abline(aes(intercept=1, slope = 0), linetype="dashed", color="red") + 
    labs(x = "Time (years)", y = "B/BMSY") +
  ggtitle("Ban Scenario B/BMSY over Time") +
  geom_text(aes(x = 1, y =1.5, label=bmsystart)) +
  geom_text(aes(x = 5, y =0.75, label=bmsyend)) + 
    scale_y_continuous(limits=c(0,5)) + 
    theme_bw()
  
dfE = fiveyrbantab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "Zone 1 SSF",
    Ezone == "e2" ~ "Zone 2 SSF",
    Ezone == "e3" ~ "Zone 3 SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) 

plotE <- ggplot(dfE) +
    geom_line(aes(x = time, y = Effort, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Ban Scenario Effort in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(dfE$Effort)), breaks = seq(from=0, to=max(dfE$Effort), by=2000)) +
    theme_bw()

dfE2 = fiveyrbantab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "SSF",
    Ezone == "e2" ~ "SSF",
    Ezone == "e3" ~ "SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) %>% 
  group_by(time, Ezone) %>% 
  summarize(ezone = sum(Effort))

plotE2 <- ggplot(dfE2) +
    geom_line(aes(x = time, y = ezone, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Ban Scenario Effort over Time") +
    theme_bw()
  
dfH = fiveyrbantab %>% 
    select(-c(B1, B2, B3, e1, e2, e3, E, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Fleet", values_to="Harvest")

plotH <- ggplot(dfH) +
    geom_line(aes(x = time, y = Harvest, color=Fleet)) + 
    labs(x = "Time", y = "Harvest", color = "Fleet")+ 
  ggtitle("Ban Scenario Harvest over Time") +
    theme_bw()

plotP <- ggplot(fiveyrbantab) + 
    geom_line(aes(x = time, y = PV)) + 
    labs(x = "Time", y = "Present Value of Benefits") + 
  scale_y_continuous(limits=c(0, max(fiveyrbantab$PV)), breaks = seq(from=0, to=max(fiveyrbantab$PV), by=25000)) +
  ggtitle("Ban Scenario Present Value of Benefits over Time") +
    theme_bw()

# ggsave(here::here("plots/plotB_5yr_ban.png"), plotB)
# ggsave(here::here("plots/plotBmsy_5yr_ban.png"), plotBmsy)
# ggsave(here::here("plots/plotE_5yr_ban.png"), plotE)
# ggsave(here::here("plots/plotH_5yr_ban.png"), plotH)
# ggsave(here::here("plots/plotP_5yr_ban.png"), plotP)
```


## Ten Year Time Horizon

```{r}
# Back of the napkin math used to estimate the starting catchability for each fleet. Used the all_metrics dataframe to divide catch by 22020*effort for 2017 (artisanal) and 2007 (industrial)

## ten year projection under business as usual

tenyrbautab = interaction_LL(choice=0.1, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)

tenyrbaunpv = -interaction_LL(choice=0.1, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)


# ## 25% fee 
# 
# tenyr25tab = interaction_LL(choice=0.25, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)
# tenyr25npv = -interaction_LL(choice=0.25, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)

## 50% fee

tenyr50tab = interaction_LL(choice=0.50, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)
tenyr50npv = -interaction_LL(choice=0.50, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)
sum(tenyr50tab$pvPIS)

# ## 75% fee 
# 
# tenyr75tab = interaction_LL(choice=0.75, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=FALSE)
# tenyr75npv = -interaction_LL(choice=0.75, state=log(best2par),time=10, params=log(parameters), rtn_catch = FALSE, rtn_npv=TRUE)

## ten year projection under optimized fee structure 

local_opts<-list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-15)
options=list("algorithm"="NLOPT_LN_AUGLAG",xtol_rel=1e-15,maxeval=160000,"local_opts"=local_opts)

tenyropt=nloptr(x0 = 0.5,
                    eval_f = interaction_LL,
                    opts = options,
                    lb = 0,
                    ub = 1,
                    eval_g_ineq=constraint_fx,
                    state=log(best2par),
                    time=10, 
                    params=log(parameters),
                    rtn_catch=FALSE,
                    rtn_npv=TRUE,
                    ban=FALSE,
                    indat=NULL
                    )

tenyropt$solution
-tenyropt$objective

tenyropttab = interaction_LL(choice=tenyropt$solution, state=log(best2par), time=10, params=log(parameters), rtn_catch=FALSE, rtn_npv=FALSE)

tenyroptnpv = -interaction_LL(choice=tenyropt$solution, state=log(best2par), time=10, params=log(parameters), rtn_catch=FALSE, rtn_npv=TRUE)

## ten year projection with a ban

tenyrbantab = interaction_LL(choice=0.1, state=log(best2par), time=10, params=log(parameters), rtn_catch=FALSE, rtn_npv=FALSE, ban=TRUE)

tenyrbannpv = -interaction_LL(choice=0.1, state=log(best2par), time=10, params=log(parameters), rtn_catch=FALSE, rtn_npv=TRUE, ban=TRUE)

ddplot(tenyrbautab, bmsy=TRUE)
ddplot(tenyropttab, bmsy=TRUE)
ddplot(tenyrbantab, bmsy=TRUE)

## biomass estimate by reference point
tenyrbautab1 = tenyrbautab %>% 
  mutate(scenario = "bau")

tenyr50tab1 = tenyr50tab %>% 
  mutate(scenario = "fifty")

tenyrbantab1 = tenyrbantab %>% 
  mutate(scenario = "ban")

tenyropttab1 = tenyropttab %>% 
  mutate(scenario = "opt")

tenyrall = tenyrbautab1 %>% 
  rbind(tenyropttab1) %>% 
  rbind(tenyrbantab1) %>% 
  rbind(tenyr50tab1) %>% 
  mutate(bbmsy = (B1+B2+B3)/26992)

## SSF total profit estimate 
tenyrprof = tibble("time" = seq(from=1,to=10),
                   "bau" = tenyrbautab1$pvPIS, 
                   "opt" = tenyropttab1$pvPIS, 
                   "ban" = tenyrbantab1$pvPIS) %>% 
  pivot_longer(cols = -time, names_to="scenario", values_to="pv_profit") %>% 
  group_by(scenario) %>%
  summarize(npv = sum(pv_profit)) 

tenyrbautab1 = tenyrbautab %>% 
  mutate(scenario = "Business as Usual")

tenyr50tab1 = tenyr50tab %>% 
  mutate(scenario = "50% Fee")

tenyrbantab1 = tenyrbantab %>% 
  mutate(scenario = "Ban")

tenyropttab1 = tenyropttab %>% 
  mutate(scenario = "Optimization (100% Fee)")

tenyrall = tenyrbautab1 %>% 
  rbind(tenyropttab1) %>% 
  rbind(tenyrbantab1) %>% 
  rbind(tenyr50tab1) %>% 
  mutate(bbmsy = (B1+B2+B3)/26992,
         scenario = as.factor(scenario))  

PVplot = ggplot(tenyrall, aes(x = time, y = PV, color = scenario)) + 
  geom_line() + 
  labs(x = "Year", y = "Present Value of Benefits (USD)", color="Scenario") + 
  ggtitle("Projected Present Value of Benefits to NaFAA under Ten-Year \nTime Horizon") +
  scale_x_continuous(breaks = seq(from=0, to=max(time), by=1)) +
  theme_bw() + 
  theme(legend.position = c(0.81, 0.7)) 

# ggsave(here::here("plots/plotPV_10yr_all_report.png"), PVplot, width = 6.5, height = 3.5)

Eplot = ggplot(tenyrall, aes(x = time, y = E, color = scenario)) + 
  geom_line() + 
  labs(x = "Year", y = "DWF Effort (fishing days)", color="Scenario") + 
  ggtitle("Projected DWF Effort under Ten-Year Time Horizon") +
  scale_x_continuous(breaks = seq(from=0, to=max(time), by=1)) +
  theme_bw() + 
  theme(legend.position = c(0.81, 0.3), legend.key.size = unit(.5, "cm")) 

ggsave(here::here("plots/plotE_10yr_all_report.png"), Eplot, width = 6.5, height = 3.5)
```

When running the model under initial parameter values and calibrated initial state values, over a 10-year time horizon with NaFAA placing equal weight on the profit of small scale fishers and the revenue from DWF, the optimal solution found was to to raise the price of the access fee to 100% again, leading to a net present value over a 10-year time period of \$720,837 USD, in 2023 dollar value. This solution would cause a decline in effort from DWF, and similarly to the five year time horizon, lead them to eventually leave the fishery. Compared to the business as usual case, this would increase the net present value of fisheries revenues by \$234,627. If NaFAA were to immediately ban and restrict access by DWF, the net present value of fisheries revenues would decrease by \$14,131 compared to business as usual. 

### Writing ten year plots out to plots folder 

```{r}
## BAU 
dfB = tenyrbautab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
  mutate(Bzone = case_when(
    Bzone == "B1" ~ "1",
    Bzone == "B2" ~ "2",
    Bzone == "B3" ~ "3"
  ),
  Bzone = as.factor(Bzone))

plotB <- ggplot(dfB) +
    geom_line(aes(x = time, y = Biomass, color=Bzone)) + 
    labs(x = "Time (years)", y = "Biomass (tonnes)", color = "Zone")+
  ggtitle("Business as Usual Biomass in Zone Z over Time") +   scale_y_continuous(limits=c(0, max(tenyrbautab$B1)), breaks = seq(from=0, to=max(tenyrbautab$B1), by=2000)) +
    theme_bw()
  
dfBmsy = tenyrbautab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
    group_by(time) %>% 
    summarize(Btot = sum(Biomass, na.rm=TRUE)) %>% 
    mutate(Bbmsy = Btot/26992) # Biomass over Biomass at MSY (originally 16459.968)

bmsystart = round(dfBmsy[1,3]$Bbmsy, 2)
bmsyend = round(dfBmsy[length(dfBmsy$time),3]$Bbmsy, 2)
  
plotBmsy <- ggplot(dfBmsy) +
    geom_line(aes(x = time, y = Bbmsy)) + 
    geom_abline(aes(intercept=1, slope = 0), linetype="dashed", color="red") + 
    labs(x = "Time (years)", y = "B/BMSY") +
  ggtitle("Business as Usual B/BMSY over Time") +
  geom_text(aes(x = 1, y =1.5, label=bmsystart)) +
  geom_text(aes(x = 10, y =0.5, label=bmsyend)) + 
    scale_y_continuous(limits=c(0,5)) + 
    theme_bw()
  
dfE = tenyrbautab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "Zone 1 SSF",
    Ezone == "e2" ~ "Zone 2 SSF",
    Ezone == "e3" ~ "Zone 3 SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) 

plotE <- ggplot(dfE) +
    geom_line(aes(x = time, y = Effort, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Business as Usual Effort in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(dfE$Effort)), breaks = seq(from=0, to=max(dfE$Effort), by=2000)) +
    theme_bw()

dfE2 = tenyrbautab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "SSF",
    Ezone == "e2" ~ "SSF",
    Ezone == "e3" ~ "SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) %>% 
  group_by(time, Ezone) %>% 
  summarize(ezone = sum(Effort))

plotE2 <- ggplot(dfE2) +
    geom_line(aes(x = time, y = ezone, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Business as Usual Effort over Time") +
    theme_bw()
  
dfH = tenyrbautab %>% 
    select(-c(B1, B2, B3, e1, e2, e3, E, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Fleet", values_to="Harvest") %>% 
  mutate(Fleet = case_when(
    Fleet == "HS" ~ "SSF",
    Fleet == "HD" ~ "DWF"
  ))

plotH <- ggplot(dfH) +
    geom_line(aes(x = time, y = Harvest, color=Fleet)) + 
    labs(x = "Time (years)", y = "Catch (tonnes)", color = "Fleet")+ 
  ggtitle("Business as Usual Catch over Time") +
    theme_bw()

plotP <- ggplot(tenyrbautab) + 
    geom_line(aes(x = time, y = PV)) + 
    labs(x = "Time", y = "Present Value of Benefits") + 
  scale_y_continuous(limits=c(0, max(tenyrbautab$PV)), breaks = seq(from=0, to=max(tenyrbautab$PV), by=25000)) +
  ggtitle("Business as Usual Present Value of Benefits over Time") +
    theme_bw()
# ggsave(here::here("plots/plotB_10yr_bau.png"), plotB)
# ggsave(here::here("plots/plotBmsy_10yr_bau.png"), plotBmsy)
# ggsave(here::here("plots/plotE_10yr_bau.png"), plotE)
# ggsave(here::here("plots/plotH_10yr_bau.png"), plotH)
# ggsave(here::here("plots/plotP_10yr_bau.png"), plotP)
```


```{r}
## OPT 
dfB = tenyropttab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
  mutate(Bzone = case_when(
    Bzone == "B1" ~ "1",
    Bzone == "B2" ~ "2",
    Bzone == "B3" ~ "3"
  ),
  Bzone = as.factor(Bzone))

plotB <- ggplot(dfB) +
    geom_line(aes(x = time, y = Biomass, color=Bzone)) + 
    labs(x = "Time (years)", y = "Biomass (tonnes)", color = "Zone")+
  ggtitle("Optimal Solution Biomass in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(tenyropttab$B1)), breaks = seq(from=0, to=max(tenyropttab$B1), by=2000)) +
    theme_bw()
  
dfBmsy = tenyropttab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
    group_by(time) %>% 
    summarize(Btot = sum(Biomass, na.rm=TRUE)) %>% 
    mutate(Bbmsy = Btot/26992) # Biomass over Biomass at MSY (originally 16459.968)

bmsystart = round(dfBmsy[1,3]$Bbmsy, 2)
bmsyend = round(dfBmsy[length(dfBmsy$time),3]$Bbmsy, 2)
  
plotBmsy <- ggplot(dfBmsy) +
    geom_line(aes(x = time, y = Bbmsy)) + 
    geom_abline(aes(intercept=1, slope = 0), linetype="dashed", color="red") + 
    labs(x = "Time (years)", y = "B/BMSY") +
  ggtitle("Optimal Solution B/BMSY over Time") +
  geom_text(aes(x = 1, y =1.5, label=bmsystart)) +
  geom_text(aes(x = 10, y =0.5, label=bmsyend)) + 
    scale_y_continuous(limits=c(0,5)) + 
    theme_bw()
  
dfE = tenyropttab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "Zone 1 SSF",
    Ezone == "e2" ~ "Zone 2 SSF",
    Ezone == "e3" ~ "Zone 3 SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) 

plotE <- ggplot(dfE) +
    geom_line(aes(x = time, y = Effort, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Optimal Solution Effort in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(dfE$Effort)), breaks = seq(from=0, to=max(dfE$Effort), by=2000)) +
    theme_bw()

dfE2 = tenyropttab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "SSF",
    Ezone == "e2" ~ "SSF",
    Ezone == "e3" ~ "SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) %>% 
  group_by(time, Ezone) %>% 
  summarize(ezone = sum(Effort))

plotE2 <- ggplot(dfE2) +
    geom_line(aes(x = time, y = ezone, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Optimal Solution Effort over Time") +
    theme_bw()
  
dfH = tenyropttab %>% 
    select(-c(B1, B2, B3, e1, e2, e3, E, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Fleet", values_to="Harvest") %>% 
  mutate(Fleet = case_when(
    Fleet == "HS" ~ "SSF",
    Fleet == "HD" ~ "DWF"
  ))

plotH <- ggplot(dfH) +
    geom_line(aes(x = time, y = Harvest, color=Fleet)) + 
    labs(x = "Time (years)", y = "Catch (tonnes)", color = "Fleet")+ 
  ggtitle("Optimal Solution Catch over Time") +
    theme_bw()

plotP <- ggplot(tenyropttab) + 
    geom_line(aes(x = time, y = PV)) + 
    labs(x = "Time", y = "Present Value of Benefits") + 
  scale_y_continuous(limits=c(0, max(tenyropttab$PV)), breaks = seq(from=0, to=max(tenyropttab$PV), by=25000)) +
  ggtitle("Optimal Solution Present Value of Benefits over Time") +
    theme_bw()

# ggsave(here::here("plots/plotB_10yr_opt.png"), plotB)
# ggsave(here::here("plots/plotBmsy_10yr_opt.png"), plotBmsy)
# ggsave(here::here("plots/plotE_10yr_opt.png"), plotE)
# ggsave(here::here("plots/plotH_10yr_opt.png"), plotH)
# ggsave(here::here("plots/plotP_10yr_opt.png"), plotP)
```


```{r}
## BAN 
dfB = tenyrbantab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
  mutate(Bzone = case_when(
    Bzone == "B1" ~ "1",
    Bzone == "B2" ~ "2",
    Bzone == "B3" ~ "3"
  ),
  Bzone = as.factor(Bzone))

plotB <- ggplot(dfB) +
    geom_line(aes(x = time, y = Biomass, color=Bzone)) + 
    labs(x = "Time (years)", y = "Biomass (tonnes)", color = "Zone")+
  ggtitle("Ban Scenario Biomass in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(tenyrbantab$B1)), breaks = seq(from=0, to=max(tenyrbantab$B1), by=2000)) +
    theme_bw()
  
dfBmsy = tenyrbantab %>% 
    select(-c(e1, e2, e3, E, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Bzone", values_to="Biomass") %>% 
    group_by(time) %>% 
    summarize(Btot = sum(Biomass, na.rm=TRUE)) %>% 
    mutate(Bbmsy = Btot/26992) # Biomass over Biomass at MSY (originally 16459.968)

bmsystart = round(dfBmsy[1,3]$Bbmsy, 2)
bmsyend = round(dfBmsy[length(dfBmsy$time),3]$Bbmsy, 2)
  
plotBmsy <- ggplot(dfBmsy) +
    geom_line(aes(x = time, y = Bbmsy)) + 
    geom_abline(aes(intercept=1, slope = 0), linetype="dashed", color="red") + 
    labs(x = "Time (years)", y = "B/BMSY") +
  ggtitle("Ban Scenario B/BMSY over Time") +
  geom_text(aes(x = 1, y =1.5, label=bmsystart)) +
  geom_text(aes(x = 10, y =0.5, label=bmsyend)) + 
    scale_y_continuous(limits=c(0,5)) + 
    theme_bw()
  
dfE = tenyrbantab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "Zone 1 SSF",
    Ezone == "e2" ~ "Zone 2 SSF",
    Ezone == "e3" ~ "Zone 3 SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) 

plotE <- ggplot(dfE) +
    geom_line(aes(x = time, y = Effort, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Ban Scenario Effort in Zone Z over Time") +
  scale_y_continuous(limits=c(0, max(dfE$Effort)), breaks = seq(from=0, to=max(dfE$Effort), by=2000)) +
    theme_bw()

dfE2 = tenyrbantab %>% 
    select(-c(B1, B2, B3, HD, HS, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Ezone", values_to="Effort") %>% 
  mutate(Ezone = case_when(
    Ezone == "e1" ~ "SSF",
    Ezone == "e2" ~ "SSF",
    Ezone == "e3" ~ "SSF",
    Ezone == "E" ~ "DWF"
  ),
  Ezone = as.factor(Ezone)) %>% 
  group_by(time, Ezone) %>% 
  summarize(ezone = sum(Effort))

plotE2 <- ggplot(dfE2) +
    geom_line(aes(x = time, y = ezone, color=Ezone))+ 
    labs(x = "Time (years)", y = "Effort (fishing days)", color = "Fleet")+ 
  ggtitle("Ban Scenario Effort over Time") +
    theme_bw()
  
dfH = tenyrbantab %>% 
    select(-c(B1, B2, B3, e1, e2, e3, E, PV, HS1, HS2, HS3, PIS, pvPIS)) %>% 
    pivot_longer(cols=c(-time), names_to="Fleet", values_to="Harvest") %>% 
  mutate(Fleet = case_when(
    Fleet == "HS" ~ "SSF",
    Fleet == "HD" ~ "DWF"
  ))

plotH <- ggplot(dfH) +
    geom_line(aes(x = time, y = Harvest, color=Fleet)) + 
    labs(x = "Time (years)", y = "Catch (tonnes)", color = "Fleet")+ 
  ggtitle("Ban Scenario Catch over Time") +
    theme_bw()

plotP <- ggplot(tenyrbantab) + 
    geom_line(aes(x = time, y = PV)) + 
    labs(x = "Time", y = "Present Value of Benefits") + 
  scale_y_continuous(limits=c(0, max(tenyrbantab$PV)), breaks = seq(from=0, to=max(tenyrbantab$PV), by=25000)) +
  ggtitle("Ban Scenario Present Value of Benefits over Time") +
    theme_bw()

# ggsave(here::here("plots/plotB_10yr_ban.png"), plotB)
# ggsave(here::here("plots/plotBmsy_10yr_ban.png"), plotBmsy)
# ggsave(here::here("plots/plotE_10yr_ban.png"), plotE)
# ggsave(here::here("plots/plotH_10yr_ban.png"), plotH)
# ggsave(here::here("plots/plotP_10yr_ban.png"), plotP)

baucpue <- tenyrbautab %>% 
  mutate(cpueS1 = HS1/e1,
         cpueS2 = HS2/e2,
         cpueS3 = HS3/e3,
         cpueD = HD/E) %>% 
  select(c(time, cpueS1, cpueS2, cpueS3, cpueD)) %>% 
  mutate(scenario = "bau")

optcpue <- tenyropttab %>% 
  mutate(cpueS1 = HS1/e1,
         cpueS2 = HS2/e2,
         cpueS3 = HS3/e3,
         cpueD = HD/E) %>% 
  select(c(time, cpueS1, cpueS2, cpueS3, cpueD)) %>% 
  mutate(scenario = "opt")

bancpue <- tenyrbantab %>% 
  mutate(cpueS1 = HS1/e1,
         cpueS2 = HS2/e2,
         cpueS3 = HS3/e3,
         cpueD = HD/E) %>% 
  select(c(time, cpueS1, cpueS2, cpueS3, cpueD)) %>% 
  mutate(scenario = "ban")

allcpue = baucpue %>% 
  rbind(optcpue, bancpue) %>% 
  pivot_longer(cols = c(cpueS1, cpueS2, cpueS3, cpueD), 
               names_to="fleet", values_to="cpue")

ggplot(allcpue, aes(x = time, y = cpue, color = scenario), alpha = 0.5) +
  geom_line() + 
  facet_wrap(~fleet, scales = "free")
```

## Sobol Sensitivity Analysis

For this sensitivity analysis we will be varying cost and price parameters to estimate how sensitive the bio-economic model is to them. To do this, we will create a wrapper function that takes the Sobol object as an input, and applies them to the interactionLl function.

```{r}
parameters

C1 = rnorm(1000, mean=0.06, sd=(0.06*0.25))
C2 = rnorm(1000, mean=0.045, sd=(0.045*0.25))
C3 = rnorm(1000, mean=0.04, sd=(0.04*0.25))
C = rnorm(1000, mean=0.045, sd=(0.045*0.25))
p = rnorm(1000, mean=500, sd=25)

parms1 = cbind.data.frame(C1=C1,C2=C2,C3=C3, C=C, p=p)

C1 = rnorm(1000, mean=0.06, sd=(0.06*0.25))
C2 = rnorm(1000, mean=0.045, sd=(0.045*0.25))
C3 = rnorm(1000, mean=0.04, sd=(0.04*0.25))
C = rnorm(1000, mean=0.045, sd=(0.045*0.25))
p = rnorm(1000, mean=500, sd=25)

parms2 = cbind.data.frame(C1=C1,C2=C2,C3=C3, C=C, p=p)

sens_P <- sobolSalt(model = NULL, parms1, parms2, nboot=300)

colnames(sens_P$X)=c("C1", "C2", "C3", "C", "p")

sobolparameters = c(
  # Biological parameters
  mu=0.43, chi=0.5, 
  gamma=1, v=1,
  # Economic Parameters
  qD=0.00000294, qS=0.00000147,
  # C1=0.060, C2=0.045, C3=0.040, C=0.045, p=500,
  beta=0.5, phi=0.005, discount=0.05)

cost_wrapper <- function(C1, C2, C3, C, p, funk, confunk, state, time, params, indat=NULL, rtn_catch=FALSE, rtn_npv=TRUE, ban=FALSE, wrap_npv=TRUE, wrap_sol=FALSE) {
  
  sob = c(C1=C1,C2=C2,C3=C3, C=C, p=p)
  sob =log(sob)
  
  parms = c(params, sob)
  
  local_opts<-list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-6)
  options=list("algorithm"="NLOPT_LN_AUGLAG", xtol_rel=1e-6,maxeval=16000,"local_opts"=local_opts)
  
  npvobj=nloptr(x0 = 0.1,
                eval_f = funk,
                    opts = options,
                    lb = 0,
                    ub = 1,
                    eval_g_ineq=confunk,
                    state=state,
                    time=time,
                    params=parms,
                    rtn_catch=FALSE,
                    rtn_npv=TRUE,
                    ban=FALSE,
                    indat=NULL)
  
  out=npvobj$solution
  npv=-npvobj$objective
  cat("Alpha = ", out, "\n NPV = ", npv, "\n")

  # if(wrap_npv == TRUE & wrap_sol == FALSE ) {
  #   return(npv)
  # } else if(wrap_npv == FALSE & wrap_sol == TRUE) {
  #   return(out)
  # }
  return(list(out=out, npv=npv))
}

unlister = function(sens_obj, rtn_npv=TRUE) {
  out=vector(mode="numeric", length=0)
  npv=vector(mode="numeric", length=0)
  for(i in 1:length(sens_obj)) {
    out[i] = sens_obj[[i]]$out
    npv[i] = sens_obj[[i]]$npv
  }
  if(rtn_npv == TRUE) {
    return(npv)
  } else if(rtn_npv == FALSE) {
    return(out)
  }
}

plan(multisession, workers = availableCores() - 1)

sens_obj <- as.data.frame(sens_P$X) %>% 
  future_pmap(cost_wrapper,
       funk=interaction_LL,
       confunk=constraint_fx,
       state=log(best2par),
       time=10,
       params=log(sobolparameters),
       indat=NULL,
       rtn_catch = FALSE,
       rtn_npv=TRUE,
       ban=FALSE,
       wrap_npv=TRUE,
       wrap_sol=FALSE)

plan(sequential) 

npv = unlister(sens_obj, rtn_npv=TRUE)
out = unlister(sens_obj, rtn_npv=FALSE)
range(npv)
range(out)

# sens_result = unlist(sens_obj)
# range(sens_result)

sens_eff = sensitivity::tell(sens_P, npv, sens_result.names = "npv")

sens_eff$S
sens_eff$T
print(sens_eff)

sens_parameters = as.data.frame(sens_P$X)

both_cost = cbind.data.frame(sens_parameters, npv=sens_eff$y)

mean_label = round(mean(both_cost$npv))

npv_uncertainty_cost <- ggplot(both_cost, aes(x=npv)) +
  geom_histogram(color = "grey90", bins = 35) +
    geom_vline(xintercept=mean(both_cost$npv), col="cyan") +
  geom_text(aes(x = (mean(both_cost$npv)-58000), y = 650, label = paste("Mean: $720,252"))) +
  scale_x_continuous(labels = label_currency()) +
    theme_bw() +
    labs(x = "Net Present Value", y = "Frequency") + 
    ggtitle("Net Present Value Across Cost Parameter Uncertainty") +
    theme(axis.title = element_text(size = 12, face = "bold"))

## Plotting npv against C1 and coloring by p
npv_v_C1_p <- ggplot(both_cost, aes(C1,npv, color = p)) +
  geom_point(alpha = 0.7) + 
    scale_color_gradient2(low = "yellow", mid = "yellow3", high = "red3") +
  scale_x_continuous(labels = label_currency()) +
  scale_y_continuous(labels = label_currency()) +
    theme_bw() +
    labs(x = "C1 ($/f)", y = "NPV", color = " Price ($/tonne)") + 
    ggtitle("NPV versus Zone 1 Fishing costs wtih \n varying Fish Price") + 
    theme(axis.title = element_text(size = 12, face = "bold"))
## Plotting npv against p and coloring by C1
npv_v_p_C1 <- ggplot(both_cost, aes(p,npv, color = C1)) +
  geom_point(alpha = 0.7) +
    scale_color_gradient2(low = "lightgreen", mid = "green3", high = "darkblue") +
  scale_x_continuous(labels = label_currency()) +
  scale_y_continuous(labels = label_currency()) +
    theme_bw() +
    labs(color = "C1 ($/f)", y = "NPV", x = "Price ($/tonne)")+ 
    ggtitle("NPV versus Fish Price with varying \n Zone 1 Fishing costs") + 
    theme(axis.title = element_text(size = 12, face = "bold"))
## Putting my two plots into a grid so they look prettier
cowplot::plot_grid(npv_v_C1_p, npv_v_p_C1,
                   ncol = 1,
                   align = "v",
                   labels = "AUTO")

## Plotting npv against C2 and coloring by p
npv_v_C2_p <- ggplot(both_cost, aes(C2,npv, color = p)) +
  geom_point(alpha = 0.7) + 
    scale_color_gradient2(low = "yellow", mid = "yellow3", high = "red3") +
  scale_x_continuous(labels = label_currency()) +
  scale_y_continuous(labels = label_currency()) +
    theme_bw() +
    labs(x = "C2 ($/f)", y = "NPV", color = "Price ($/tonne)") + 
    ggtitle("NPV versus Zone 2 Fishing costs wtih \n varying Fish Price") + 
    theme(axis.title = element_text(size = 12, face = "bold"))
## Plotting npv against p and coloring by C2
npv_v_p_C2 <- ggplot(both_cost, aes(p,npv, color = C2)) +
  geom_point(alpha = 0.7) +
    scale_color_gradient2(low = "lightgreen", mid = "green3", high = "darkblue") +
  scale_x_continuous(labels = label_currency()) +
  scale_y_continuous(labels = label_currency()) +
    theme_bw() +
    labs(color = "C2 ($/f)", y = "NPV", x = "Price ($/tonne)")+ 
    ggtitle("NPV versus Fish Price with varying \n Zone 2 Fishing costs") + 
    theme(axis.title = element_text(size = 12, face = "bold"))
## Putting my two plots into a grid so they look prettier
cowplot::plot_grid(npv_v_C2_p, npv_v_p_C2,
                   ncol = 1,
                   align = "v",
                   labels = "AUTO")
# ggsave(here::here("plots/npv_v_c2_p.png"), npv_v_C2_p, width = 6.5, height = 3.5)
# ggsave(here::here("plots/npv_v_p_c2.png"), npv_v_p_C2, width = 6.5, height = 3.5)
# ggsave(here::here("plots/npv_v_c1_p.png"), npv_v_C1_p, width = 6.5, height = 3.5)
# ggsave(here::here("plots/npv_v_p_c1.png"), npv_v_p_C1, width = 6.5, height = 3.5)
# ggsave(here::here("plots/npv_uncertainty_cost.png"), npv_uncertainty_cost, width = 6.5, height = 3.5)
```

### Wellfare Term and its effect on Alpha 

```{r}

parms1 = cbind.data.frame(beta=runif(500, min=0, max=1),
                          phi=rnorm(500, mean=0.005, sd=(0.005*.15)))

parms2 = cbind.data.frame(beta=runif(500, min=0, max=1),
                          phi=rnorm(500, mean=0.005, sd=(0.005*.15)))

sens_P <- sobolSalt(model = NULL, parms1, parms2, nboot=300)

colnames(sens_P$X)=c("beta", "phi")

sobolparameters = c(
  # Biological parameters
  mu=0.43, chi=0.5,
  gamma=1, v=1,
  # Economic Parameters
  qD=0.00000294, qS=0.00000147,
  C1=0.060, C2=0.045, C3=0.040, C=0.045, p=500,
  # beta=0.5, phi=0.005,
  discount=0.05)

# first_row = as.data.frame(sens_P$X)[1:5,]

beta_wrapper <- function(beta, phi, funk, confunk, state, time, params, indat=NULL, rtn_catch=FALSE, rtn_npv=TRUE, ban=FALSE, wrap_npv=TRUE, wrap_sol=FALSE) {
  
  cat("Beta = ", beta, "\n Phi = ", phi, "\n")
  sob = c(beta=beta, phi=phi)
  sob =log(sob)
  parms = c(params, sob)

  
  local_opts<-list("algorithm"="NLOPT_LN_COBYLA",xtol_rel=1e-6)
  options=list("algorithm"="NLOPT_LN_AUGLAG", xtol_rel=1e-6,maxeval=16000,"local_opts"=local_opts)
  
  npvobj=nloptr(x0 = 0.1,
                eval_f = funk,
                    opts = options,
                    lb = 0,
                    ub = 1,
                    eval_g_ineq=confunk,
                    state=state,
                    time=time,
                    params=parms,
                    rtn_catch=FALSE,
                    rtn_npv=TRUE,
                    ban=FALSE,
                    indat=NULL)
  
  out=npvobj$solution
  npv=-npvobj$objective
  cat("Alpha = ", out, "\n NPV = ", npv, "\n")

  return(list(out=out, npv=npv))
}

plan(multisession, workers = availableCores() - 1)

sens_npv_obj <- as.data.frame(sens_P$X) %>% 
    future_pmap(beta_wrapper,
       funk=interaction_LL,
       confunk=constraint_fx,
       state=log(best2par),
       time=10,
       params=log(sobolparameters),
       indat=NULL,
       rtn_catch = FALSE,
       rtn_npv=TRUE,
       ban=FALSE,
       wrap_npv=TRUE,
       wrap_sol=FALSE)

plan(sequential) 

npv = unlister(sens_npv_obj, rtn_npv=TRUE)
out = unlister(sens_npv_obj, rtn_npv=FALSE)
range(npv)
range(out)

sens_npv_eff = sensitivity::tell(sens_P, npv, sens_result.names="npv")

sens_npv_eff$S
sens_npv_eff$T

print(sens_npv_eff)

## Only include this if alpha has a range of values... it doesnt as it stands 

# sens_alpha_eff = sensitivity::tell(sens_P, out, sens_result.names = "alpha")
# 
# sens_alpha_eff$S
# sens_alpha_eff$T

sens_parameters = as.data.frame(sens_P$X)

both = cbind.data.frame(sens_parameters, npv=sens_npv_eff$y
                        # , alpha=sens_alpha_eff$y
                        )
mean_label = round(mean(both$npv))

npv_uncertainty_wfare <- ggplot(both, aes(x=npv)) +
  geom_histogram(color = "grey90", bins = 35) +
    geom_vline(xintercept=mean(both$npv), col="cyan") +
  geom_text(aes(x = (mean(both$npv)-58000), y = 86, label = paste("Mean: $715,582"))) +
  scale_x_continuous(labels = label_currency()) +
    theme_bw() +
    labs(x = "Net Present Value", y = "Frequency") + 
    ggtitle("Net Present Value Across Welfare Parameter Uncertainty") +
    theme(axis.title = element_text(size = 12, face = "bold"))

## Plotting npv against beta and coloring by phi
npv_v_beta_phi <- ggplot(both, aes(beta,npv, color = phi)) + 
  geom_point(alpha = 0.7) + 
    scale_color_gradient2(low = "yellow", mid = "yellow3", high = "red3") +
  scale_y_continuous(labels = label_currency()) +
    theme_bw() +
    labs(x = "Beta", y = "NPV", color = "Phi") + 
    ggtitle("NPV versus Beta with varying Phi") + 
    theme(axis.title = element_text(size = 12, face = "bold"))
  
## Plotting npv against phi and coloring by beta
npv_v_phi_beta <- ggplot(both, aes(phi,npv, color = beta)) +
  geom_point(alpha = 0.7) +
    scale_color_gradient2(low = "lightgreen", mid = "green3", high = "darkblue") +
  scale_y_continuous(labels = label_currency()) +
    theme_bw() +
    labs(color = "Beta", y = "NPV", x = "Phi")+ 
    ggtitle("NPV versus Phi with varying Beta") +
    theme(axis.title = element_text(size = 12, face = "bold"))

## Putting my two plots into a grid so they look prettier
cowplot::plot_grid(npv_v_beta_phi, npv_v_phi_beta,
                   ncol = 1,
                   align = "v",
                   labels = "AUTO")
  
  
# alpha_uncertainty_wfare <- ggplot(both, aes(x=alpha)) +
#   geom_histogram(color = "grey90", bins = 35) +
#     geom_vline(xintercept=mean(both$alpha), col="cyan") +
#     theme_bw() +
#     labs(x = "Alpha", y = "Frequency") +
#     ggtitle("Alpha Across Phi and Beta Parameter Uncertainty") +
#     theme(axis.title = element_text(size = 12, face = "bold"))
  
# ## Plotting alpha against beta and coloring by phi
# alpha_v_beta_phi <- ggplot(both, aes(beta,alpha, color = phi)) +
#   geom_point(alpha = 0.7) +
#     scale_color_gradient2(low = "yellow", mid = "yellow3", high = "red3") +
#     theme_bw() +
#     labs(x = "Beta", y = "Alpha", color = "Phi") +
#     ggtitle("Alpha versus beta across varying Phi") +
#     theme(axis.title = element_text(size = 12, face = "bold"))
# 
# ## Plotting alpha against phi and coloring by beta
# alpha_v_phi_beta <- ggplot(both, aes(phi,alpha, color = beta)) +
#   geom_point(alpha = 0.7) +
#     scale_color_gradient2(low = "lightgreen", mid = "green3", high = "darkblue") +
#     theme_bw() +
#     labs(color = "Beta", y = "Alpha", x = "Phi")+
#     ggtitle("Alpha versus Phi across varying Beta") +
#     theme(axis.title = element_text(size = 12, face = "bold"))

# cowplot::plot_grid(alpha_v_beta_phi, alpha_v_phi_beta,
#                    ncol = 1,
#                    align = "v",
#                    labels = "AUTO")

ggsave(here::here("plots/npv_uncertainty_wfare.png"), npv_uncertainty_wfare, width = 6.5, height = 3.5)
# ggsave(here::here("plots/alpha_uncertainty_wfare.png"), alpha_uncertainty_wfare)
# ggsave(here::here("plots/npv_v_beta_phi.png"), npv_v_beta_phi)
# ggsave(here::here("plots/npv_v_phi_beta.png"), npv_v_phi_beta)
# ggsave(here::here("plots/alpha_v_beta_phi.png"), alpha_v_beta_phi)
# ggsave(here::here("plots/alpha_v_phi_beta.png"), alpha_v_phi_beta)
```
